***INCLUDE LSLDBF11.

* Verteilt den Inhalt von SELTAB auf die SELECT-OPTIONS / PARAMETERS
* P_SUBRC: 0: O.K.
*          1: SSCR-Eintrag mit falschen KIND
FORM FILL_SELPARS_FROM_SELTAB TABLES   P_SSCR STRUCTURE RSSCR
                              USING    P_REPNAME LIKE SY-REPID
                                       P_LIBERAL
                              CHANGING P_SUBRC LIKE SY-SUBRC.

  DATA L_SUBRC LIKE SY-SUBRC.
  DATA L_KIND LIKE RSSCR-KIND.

  DATA: BEGIN OF L_FORMNAME_0,
          PREFIX(7) VALUE '%_LINK_',
          SUFFIX(8),
        END OF L_FORMNAME_0.

  DATA: BEGIN OF L_FORMNAME_1,
          PREFIX(9) VALUE '%_SELTAB_',
          SUFFIX(1),
        END OF L_FORMNAME_1.

  SORT G_SELTAB STABLE BY SELNAME.

  LOOP AT G_SELTAB.
    L_KIND = G_SELTAB-KIND.
    AT NEW SELNAME.
      MOVE SY-TABIX TO SELTAB_CURR.
      READ TABLE P_SSCR WITH KEY G_SELTAB-SELNAME BINARY SEARCH.
      IF SY-SUBRC NE 0.
        CONTINUE.
      ENDIF.
      IF P_SSCR-KIND NE L_KIND AND P_LIBERAL = SPACE.
        P_SUBRC = 1.
        EXIT.
      ENDIF.
      MOVE G_SELTAB-SELNAME TO L_FORMNAME_0-SUFFIX.
      IF P_SSCR-FLAG1 O SSCR_F1_IXST AND P_SSCR-KIND EQ 'P'.
        MOVE 'M' TO L_FORMNAME_1-SUFFIX.
      ELSEIF P_SSCR-TYPE NE 'v' AND P_SSCR-TYPE NE 'h'.
        MOVE P_SSCR-KIND TO L_FORMNAME_1-SUFFIX.
      ELSE.
        CONTINUE.
      ENDIF.
      PERFORM (L_FORMNAME_0) IN PROGRAM (P_REPNAME)
              USING 'SAPLSLDB' L_FORMNAME_1 L_SUBRC IF FOUND.
   ENDAT.
  ENDLOOP.

ENDFORM.                     "  FILL_SELPARS_FROM_g_seltab

* SUBMIT WITH SELECTION-TABLE: Versorge Select-Options
FORM %_SELTAB_S TABLES P_SELOPT                     "#EC *
               USING P_SIGN P_OPTION P_LOW P_HIGH
                     P_DESC STRUCTURE RSSELINT P_SUBRC.

  DATA L_SELNAME LIKE G_SELTAB-SELNAME.

  REFRESH P_SELOPT.
  clear   p_selopt.

  IF G_SELTAB_255[] IS INITIAL.
    MOVE G_SELTAB-SELNAME TO L_SELNAME.
  LOOP AT G_SELTAB FROM SELTAB_CURR.
    IF G_SELTAB-SELNAME NE L_SELNAME.
      EXIT.
    ENDIF.
    IF G_SELTAB-KIND IS INITIAL.
      G_SELTAB-KIND = 'S'.
    ENDIF.
    IF G_SELTAB-KIND = 'S'.
      CHECK G_SELTAB-SIGN NE SPACE.
      MOVE: G_SELTAB-SIGN TO P_SIGN.
      MOVE: G_SELTAB-OPTION TO P_OPTION.

*        MOVE: G_SELTAB-LOW  TO P_LOW.
     PERFORM UNICODE_SAFE_MOVE USING G_SELTAB-LOW CHANGING P_LOW.

      IF G_SELTAB-OPTION = 'BT' OR G_SELTAB-OPTION = 'NB'.
*          MOVE: G_SELTAB-HIGH TO P_HIGH.
     PERFORM UNICODE_SAFE_MOVE USING G_SELTAB-HIGH CHANGING P_HIGH.

      ELSE.
        CLEAR P_HIGH.
      ENDIF.
    ELSE.
      MOVE: 'I'           TO P_SIGN.
      MOVE: 'EQ'          TO P_OPTION.
*        MOVE: G_SELTAB-LOW  TO P_LOW.
     PERFORM UNICODE_SAFE_MOVE USING G_SELTAB-LOW CHANGING P_LOW.

      CLEAR P_HIGH.
    ENDIF.
    APPEND P_SELOPT.
  ENDLOOP.
  ELSE.
    MOVE G_SELTAB_255-SELNAME TO L_SELNAME.
    LOOP AT G_SELTAB_255 FROM SELTAB_CURR.
      IF G_SELTAB_255-SELNAME NE L_SELNAME.
        EXIT.
      ENDIF.
      IF G_SELTAB_255-KIND IS INITIAL.
        G_SELTAB_255-KIND = 'S'.
      ENDIF.
      IF G_SELTAB_255-KIND = 'S'.
        CHECK G_SELTAB_255-SIGN NE SPACE.
        MOVE: G_SELTAB_255-SIGN TO P_SIGN.
        MOVE: G_SELTAB_255-OPTION TO P_OPTION.

*        MOVE: G_SELTAB-LOW  TO P_LOW.
       PERFORM UNICODE_SAFE_MOVE_255 USING G_SELTAB_255-LOW CHANGING P_LOW.

        IF G_SELTAB_255-OPTION = 'BT' OR G_SELTAB_255-OPTION = 'NB'.
*          MOVE: G_SELTAB-HIGH TO P_HIGH.
       PERFORM UNICODE_SAFE_MOVE_255 USING G_SELTAB_255-HIGH CHANGING P_HIGH.

        ELSE.
          CLEAR P_HIGH.
        ENDIF.
      ELSE.
        MOVE: 'I'           TO P_SIGN.
        MOVE: 'EQ'          TO P_OPTION.
*        MOVE: G_SELTAB-LOW  TO P_LOW.
       PERFORM UNICODE_SAFE_MOVE_255 USING G_SELTAB_255-LOW CHANGING P_LOW.

        CLEAR P_HIGH.
      ENDIF.
      APPEND P_SELOPT.
    ENDLOOP.
  ENDIF.
ENDFORM.
* SUBMIT WITH SELECTION-TABLE: Versorge Parameter
FORM %_SELTAB_P USING P_PARAM VALUE(P_TEXT) P_SUBRC.   "#EC *

  DATA L_SELNAME LIKE G_SELTAB-SELNAME.

  IF G_SELTAB_255[] IS INITIAL.
    MOVE G_SELTAB-SELNAME TO L_SELNAME.
  LOOP AT G_SELTAB FROM SELTAB_CURR.
    IF G_SELTAB-SELNAME NE L_SELNAME.
      EXIT.
    ENDIF.
*      MOVE: G_SELTAB-LOW  TO P_PARAM.
       PERFORM UNICODE_SAFE_MOVE USING G_SELTAB-LOW CHANGING P_PARAM.
    ENDLOOP.
  ELSE.
    MOVE G_SELTAB_255-SELNAME TO L_SELNAME.
    LOOP AT G_SELTAB_255 FROM SELTAB_CURR.
      IF G_SELTAB_255-SELNAME NE L_SELNAME.
        EXIT.
      ENDIF.
*      MOVE: G_SELTAB-LOW  TO P_PARAM.
       PERFORM UNICODE_SAFE_MOVE_255 USING G_SELTAB_255-LOW CHANGING P_PARAM.
    ENDLOOP.
  ENDIF.
ENDFORM.                        " %_g_seltab_P
* SUBMIT WITH SELECTION-TABLE: Versorge Matchcode-Parameter
FORM %_SELTAB_M USING P_PARAM TYPE SYLDB_SP         "#EC *
                              VALUE(P_TEXT)
                              P_SUBRC LIKE SY-SUBRC.

  DATA L_SELNAME LIKE G_SELTAB-SELNAME.
  DATA L_SP LIKE SPPARAMS.

  MOVE G_SELTAB-SELNAME TO L_SELNAME.

  CLEAR P_PARAM-TRANGE.
  LOOP AT G_SELTAB FROM SELTAB_CURR.
    IF G_SELTAB-SELNAME NE L_SELNAME.
      EXIT.
    ENDIF.
    MOVE G_SELTAB-LOW TO L_SP.
    MOVE-CORRESPONDING L_SP TO P_PARAM.
*     PERFORM UNICODE_SAFE_MOVE USING L_SP CHANGING P_PARAM.

  ENDLOOP.

ENDFORM.                        " %_g_seltab_M

FORM UNICODE_SAFE_MOVE USING SELVALUE TYPE TVARV_VAL
                       CHANGING P_PARAM TYPE ANY.

  DATA: p_len TYPE i.
  DATA: s_len TYPE i.

  DATA: p_type(1) TYPE c.


  FIELD-SYMBOLS: <f> TYPE x,
                 <g> TYPE x.

  DESCRIBE FIELD P_PARAM TYPE p_type.

  IF p_type = 'u'.

    IF not SELVALUE is initial.
    DESCRIBE FIELD P_PARAM LENGTH p_len IN BYTE MODE.
    DESCRIBE FIELD SELVALUE LENGTH s_len IN BYTE MODE.

    ASSIGN SELVALUE TO <f> CASTING.
    ASSIGN P_PARAM TO <g> CASTING.

    CLEAR P_PARAM.

    IF p_len > s_len.
      MOVE <f> TO <g>(s_len).
    ELSE.
      MOVE <f> TO <g>.
    ENDIF.
    else.
     clear P_PARAM.
    endif.

  ELSE.
    MOVE SELVALUE TO P_PARAM.
  ENDIF.


ENDFORM.

* Verteilt den Inhalt von SELTAB auf die SELECT-OPTIONS / PARAMETERS
* P_SUBRC: 0: O.K.
*          1: SSCR-Eintrag mit falschen KIND
FORM FILL_SELPARS_FROM_SELTAB_255 TABLES   P_SSCR STRUCTURE RSSCR
                                  USING    P_REPNAME LIKE SY-REPID
                                           P_LIBERAL
                                  CHANGING P_SUBRC LIKE SY-SUBRC.

  DATA L_SUBRC LIKE SY-SUBRC.
  DATA L_KIND LIKE RSSCR-KIND.

  DATA: BEGIN OF L_FORMNAME_0,
          PREFIX(7) VALUE '%_LINK_',
          SUFFIX(8),
        END OF L_FORMNAME_0.

  DATA: BEGIN OF L_FORMNAME_1,
          PREFIX(9) VALUE '%_SELTAB_',
          SUFFIX(1),
        END OF L_FORMNAME_1.

  SORT G_SELTAB_255 STABLE BY SELNAME.

  LOOP AT G_SELTAB_255.
    L_KIND = G_SELTAB_255-KIND.
    AT NEW SELNAME.
      MOVE SY-TABIX TO SELTAB_CURR.
      READ TABLE P_SSCR WITH KEY G_SELTAB_255-SELNAME BINARY SEARCH.
      IF SY-SUBRC NE 0.
        CONTINUE.
      ENDIF.
      IF P_SSCR-KIND NE L_KIND AND P_LIBERAL = SPACE.
        P_SUBRC = 1.
        EXIT.
      ENDIF.
      MOVE G_SELTAB_255-SELNAME TO L_FORMNAME_0-SUFFIX.
      IF P_SSCR-FLAG1 O SSCR_F1_IXST AND P_SSCR-KIND EQ 'P'.
        MOVE 'M' TO L_FORMNAME_1-SUFFIX.
      ELSEIF P_SSCR-TYPE NE 'v' AND P_SSCR-TYPE NE 'h'.
        MOVE P_SSCR-KIND TO L_FORMNAME_1-SUFFIX.
      ELSE.
        CONTINUE.
      ENDIF.
      PERFORM (L_FORMNAME_0) IN PROGRAM (P_REPNAME)
              USING 'SAPLSLDB' L_FORMNAME_1 L_SUBRC IF FOUND.
   ENDAT.
  ENDLOOP.

ENDFORM.                     "  FILL_SELPARS_FROM_g_seltab_255

FORM UNICODE_SAFE_MOVE_255 USING SELVALUE TYPE RVARI_VAL_255
                           CHANGING P_PARAM TYPE ANY.

  DATA: p_len TYPE i.
  DATA: s_len TYPE i.

  DATA: p_type(1) TYPE c.


  FIELD-SYMBOLS: <f> TYPE x,
                 <g> TYPE x.

  DESCRIBE FIELD P_PARAM TYPE p_type.

  IF p_type = 'u'.

    IF not SELVALUE is initial.
    DESCRIBE FIELD P_PARAM LENGTH p_len IN BYTE MODE.
    DESCRIBE FIELD SELVALUE LENGTH s_len IN BYTE MODE.

    ASSIGN SELVALUE TO <f> CASTING.
    ASSIGN P_PARAM TO <g> CASTING.

    CLEAR P_PARAM.

    IF p_len > s_len.
      MOVE <f> TO <g>(s_len).
    ELSE.
      MOVE <f> TO <g>.
    ENDIF.
    else.
     clear P_PARAM.
    endif.

  ELSE.
    try.
    MOVE SELVALUE TO P_PARAM.
    catch cx_root.
    endtry.
  ENDIF.


ENDFORM.
