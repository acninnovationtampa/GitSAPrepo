FUNCTION /1BEA/CRMB_DL_PRC_O_IT_MAPIN.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(IS_DLI_WRK) TYPE  /1BEA/S_CRMB_DLI_WRK
*"     REFERENCE(IS_ITC) TYPE  BEAS_ITC_WRK
*"  EXPORTING
*"     REFERENCE(ES_PRC_HEAD) TYPE  PRCT_HEAD_COM
*"     REFERENCE(ES_PRC_H_ACS) TYPE  CRMT_ACS_H_HEADER_ONLY
*"     REFERENCE(ES_PRC_ITEM) TYPE  PRCT_ITEM_COM_VAR
*"     REFERENCE(ES_PRC_I_ACS) TYPE  CRMT_ACS_I_COM
*"     REFERENCE(ES_PRC_I_EX) TYPE  PRCT_COND_EXTERNAL_INPUT
*"     REFERENCE(ET_RETURN) TYPE  BEAT_RETURN
*"  EXCEPTIONS
*"      REJECT
*"--------------------------------------------------------------------
*======================================================================
*
* The following coding has been generated. Please do not change
* manually. All modifications will be lost by new generation.
*
* The code generation was triggered by
*
* Name  : DDIC
* Date  : 03.05.2012
* Time  : 13:53:10
*
*======================================================================
  CONSTANTS:
    LC_APPLICATION TYPE /SAPCND/APPLICATION VALUE 'CRM',
    LC_USAGE       TYPE /SAPCND/USAGE VALUE 'PR',
    LC_BOR_ITEM    TYPE PRCT_ATTR_NAME VALUE 'BOR_OBJECT_TYPE',
    LC_BOR_HEAD    TYPE PRCT_ATTR_NAME VALUE 'BOR_OBJTYP_HDR'.
  DATA:
    LS_PRC_HEAD        TYPE PRCT_HEAD_COM,
    LS_PRC_ITEM        TYPE PRCT_ITEM_COM_VAR,
    LS_ATTR_NAME       TYPE PRCT_ATTR_NAME,
    LS_ATTR_NAME_VALUE TYPE PRCT_ATTR_NAME_VALUE,
    LT_RETURN          TYPE BEAT_RETURN.


* Fill fix Item and Header Fields
  MOVE IS_DLI_WRK-PRICING_DATE TO LS_PRC_HEAD-PRSDT.
  MOVE IS_DLI_WRK-PRODUCT TO LS_PRC_ITEM-MATNR.
  MOVE IS_DLI_WRK-EXCHANGE_TYPE TO LS_PRC_HEAD-KURST.
  MOVE IS_DLI_WRK-NET_WEIGHT TO LS_PRC_ITEM-NTGEW.
  MOVE IS_DLI_WRK-GROSS_WEIGHT TO LS_PRC_ITEM-BRGEW.
  MOVE IS_DLI_WRK-WEIGHT_UNIT TO LS_PRC_ITEM-GEWEI.
  MOVE IS_DLI_WRK-BASE_TIME_FROM TO LS_PRC_ITEM-BASE_TIME_FROM.
  MOVE IS_DLI_WRK-BASE_TIME_TO TO LS_PRC_ITEM-BASE_TIME_TO.
  MOVE IS_DLI_WRK-BASE_TIMEZONE TO LS_PRC_ITEM-BASE_TIMEZONE.
  MOVE IS_DLI_WRK-DLI_GUID TO LS_PRC_ITEM-KPOSN.
  MOVE IS_DLI_WRK-QUANTITY TO LS_PRC_ITEM-MGAME.
  MOVE IS_DLI_WRK-QTY_UNIT TO LS_PRC_ITEM-VRKME.
  MOVE IS_DLI_WRK-PROC_QTY_NUM TO LS_PRC_ITEM-NUM.
  MOVE IS_DLI_WRK-PROC_QTY_DEN TO LS_PRC_ITEM-DEN.
  MOVE IS_DLI_WRK-PROC_QTY_EXP10 TO LS_PRC_ITEM-EXP.
* Determine the relevant attributes.
* The result is buffered in global tables.
  CALL FUNCTION '/1BEA/CRMB_DL_PRC_O_GET_INFO'
    EXPORTING
      IV_APPLICATION           = LC_APPLICATION
      IV_USAGE                 = LC_USAGE
      IV_PRIC_PROC             = IS_ITC-DLI_PRC_PROC
    EXCEPTIONS
      WRONG_CALL               = 1
      IPC_ERROR                = 2
      SESSION_BEGIN            = 3
      OTHERS                   = 4.
    IF SY-SUBRC NE 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 INTO GV_DUMMY.
      PERFORM MSG_ADD USING SPACE SPACE SPACE SPACE CHANGING ET_RETURN.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
              RAISING REJECT.
    ENDIF.

* Fill Header/Item Attribute Table
    LOOP AT GT_HEAD_ATTR_NAMES INTO LS_ATTR_NAME.
      CLEAR LS_ATTR_NAME_VALUE.
      LS_ATTR_NAME_VALUE-ATTR_NAME = LS_ATTR_NAME.
      CASE LS_ATTR_NAME.
        WHEN 'VALUATION_TYPE'.
          MOVE IS_DLI_WRK-VALUATION_TYPE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SERVICE_TYPE'.
          MOVE IS_DLI_WRK-SERVICE_TYPE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRODUCT'.
          MOVE IS_DLI_WRK-PRODUCT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRC_INDICATOR'.
          MOVE IS_DLI_WRK-PRC_INDICATOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INDICATOR_IC'.
          MOVE IS_DLI_WRK-INDICATOR_IC TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_DATE'.
          MOVE IS_DLI_WRK-BILL_DATE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'VENDOR'.
          MOVE IS_DLI_WRK-VENDOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SERVICE_ORG'.
          MOVE IS_DLI_WRK-SERVICE_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SALES_ORG'.
          MOVE IS_DLI_WRK-SALES_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'REF_CURRENCY'.
          MOVE IS_DLI_WRK-REF_CURRENCY TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INCOTERMS2'.
          MOVE IS_DLI_WRK-INCOTERMS2 TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INCOTERMS1'.
          MOVE IS_DLI_WRK-INCOTERMS1 TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'DIVISION'.
          MOVE IS_DLI_WRK-DIVISION TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_ORG'.
          MOVE IS_DLI_WRK-BILL_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'DIS_CHANNEL'.
          MOVE IS_DLI_WRK-DIS_CHANNEL TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PMNTTRMS'.
          MOVE IS_DLI_WRK-TERMS_OF_PAYMENT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'TAX_DEST_CTY'.
          MOVE IS_DLI_WRK-TAX_DEST_COUNTRY TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRICE_PRODUCT'.
          MOVE IS_DLI_WRK-PRODUCT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_TO_PARTY'.
          MOVE IS_DLI_WRK-BILL_TO_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PAYER'.
          MOVE IS_DLI_WRK-PAYER_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SOLD_TO_PARTY'.
          MOVE IS_DLI_WRK-SOLD_TO_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SALES_ORG_ORDER'.
          MOVE IS_DLI_WRK-SALES_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INVENT_LOC'.
          MOVE IS_DLI_WRK-VENDOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'CRM_ITEM_GUID'.
          MOVE IS_DLI_WRK-SRC_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PAYER_IC_GUID'.
          MOVE IS_DLI_WRK-PAYER_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRICE_DATE'.
          MOVE IS_DLI_WRK-PRICING_DATE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'HEADER_DIVISION'.
          MOVE IS_DLI_WRK-DIVISION_H TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN OTHERS.
          CONTINUE.
      ENDCASE.
      INSERT LS_ATTR_NAME_VALUE INTO TABLE LS_PRC_ITEM-HEAD_ATTRIBUTES.
    ENDLOOP.

* Fill Item Attribute Table
    LOOP AT GT_ITEM_ATTR_NAMES INTO LS_ATTR_NAME.
      CLEAR LS_ATTR_NAME_VALUE.
      LS_ATTR_NAME_VALUE-ATTR_NAME = LS_ATTR_NAME.
      CASE LS_ATTR_NAME.
        WHEN 'VALUATION_TYPE'.
          MOVE IS_DLI_WRK-VALUATION_TYPE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SERVICE_TYPE'.
          MOVE IS_DLI_WRK-SERVICE_TYPE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRODUCT'.
          MOVE IS_DLI_WRK-PRODUCT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRC_INDICATOR'.
          MOVE IS_DLI_WRK-PRC_INDICATOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INDICATOR_IC'.
          MOVE IS_DLI_WRK-INDICATOR_IC TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_DATE'.
          MOVE IS_DLI_WRK-BILL_DATE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'VENDOR'.
          MOVE IS_DLI_WRK-VENDOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SERVICE_ORG'.
          MOVE IS_DLI_WRK-SERVICE_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SALES_ORG'.
          MOVE IS_DLI_WRK-SALES_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'REF_CURRENCY'.
          MOVE IS_DLI_WRK-REF_CURRENCY TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INCOTERMS2'.
          MOVE IS_DLI_WRK-INCOTERMS2 TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INCOTERMS1'.
          MOVE IS_DLI_WRK-INCOTERMS1 TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'DIVISION'.
          MOVE IS_DLI_WRK-DIVISION TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_ORG'.
          MOVE IS_DLI_WRK-BILL_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'DIS_CHANNEL'.
          MOVE IS_DLI_WRK-DIS_CHANNEL TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PMNTTRMS'.
          MOVE IS_DLI_WRK-TERMS_OF_PAYMENT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'TAX_DEST_CTY'.
          MOVE IS_DLI_WRK-TAX_DEST_COUNTRY TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRICE_PRODUCT'.
          MOVE IS_DLI_WRK-PRODUCT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_TO_PARTY'.
          MOVE IS_DLI_WRK-BILL_TO_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PAYER'.
          MOVE IS_DLI_WRK-PAYER_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SOLD_TO_PARTY'.
          MOVE IS_DLI_WRK-SOLD_TO_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SALES_ORG_ORDER'.
          MOVE IS_DLI_WRK-SALES_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INVENT_LOC'.
          MOVE IS_DLI_WRK-VENDOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'CRM_ITEM_GUID'.
          MOVE IS_DLI_WRK-SRC_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PAYER_IC_GUID'.
          MOVE IS_DLI_WRK-PAYER_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRICE_DATE'.
          MOVE IS_DLI_WRK-PRICING_DATE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'HEADER_DIVISION'.
          MOVE IS_DLI_WRK-DIVISION_H TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN OTHERS.
          CONTINUE.
      ENDCASE.
      INSERT LS_ATTR_NAME_VALUE INTO TABLE LS_PRC_ITEM-ITEM_ATTRIBUTES.
    ENDLOOP.

* Fill Timestamp Attribute Table
    LOOP AT GT_TIMESTAMP_NAMES INTO LS_ATTR_NAME.
      CLEAR LS_ATTR_NAME_VALUE.
      LS_ATTR_NAME_VALUE-ATTR_NAME = LS_ATTR_NAME.
      CASE LS_ATTR_NAME.
        WHEN 'VALUATION_TYPE'.
          MOVE IS_DLI_WRK-VALUATION_TYPE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SERVICE_TYPE'.
          MOVE IS_DLI_WRK-SERVICE_TYPE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRODUCT'.
          MOVE IS_DLI_WRK-PRODUCT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRC_INDICATOR'.
          MOVE IS_DLI_WRK-PRC_INDICATOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INDICATOR_IC'.
          MOVE IS_DLI_WRK-INDICATOR_IC TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_DATE'.
          MOVE IS_DLI_WRK-BILL_DATE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'VENDOR'.
          MOVE IS_DLI_WRK-VENDOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SERVICE_ORG'.
          MOVE IS_DLI_WRK-SERVICE_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SALES_ORG'.
          MOVE IS_DLI_WRK-SALES_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'REF_CURRENCY'.
          MOVE IS_DLI_WRK-REF_CURRENCY TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INCOTERMS2'.
          MOVE IS_DLI_WRK-INCOTERMS2 TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INCOTERMS1'.
          MOVE IS_DLI_WRK-INCOTERMS1 TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'DIVISION'.
          MOVE IS_DLI_WRK-DIVISION TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_ORG'.
          MOVE IS_DLI_WRK-BILL_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'DIS_CHANNEL'.
          MOVE IS_DLI_WRK-DIS_CHANNEL TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PMNTTRMS'.
          MOVE IS_DLI_WRK-TERMS_OF_PAYMENT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'TAX_DEST_CTY'.
          MOVE IS_DLI_WRK-TAX_DEST_COUNTRY TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRICE_PRODUCT'.
          MOVE IS_DLI_WRK-PRODUCT TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'BILL_TO_PARTY'.
          MOVE IS_DLI_WRK-BILL_TO_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PAYER'.
          MOVE IS_DLI_WRK-PAYER_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SOLD_TO_PARTY'.
          MOVE IS_DLI_WRK-SOLD_TO_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'SALES_ORG_ORDER'.
          MOVE IS_DLI_WRK-SALES_ORG TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'INVENT_LOC'.
          MOVE IS_DLI_WRK-VENDOR TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'CRM_ITEM_GUID'.
          MOVE IS_DLI_WRK-SRC_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PAYER_IC_GUID'.
          MOVE IS_DLI_WRK-PAYER_GUID TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'PRICE_DATE'.
          MOVE IS_DLI_WRK-PRICING_DATE TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN 'HEADER_DIVISION'.
          MOVE IS_DLI_WRK-DIVISION_H TO LS_ATTR_NAME_VALUE-ATTR_VALUE.
        WHEN OTHERS.
          CONTINUE.
      ENDCASE.
      INSERT LS_ATTR_NAME_VALUE INTO TABLE LS_PRC_ITEM-TIMESTAMPS.
    ENDLOOP.
  LS_PRC_HEAD-HWAER          = IS_DLI_WRK-REF_CURRENCY.
  LS_PRC_HEAD-WAERK          = IS_DLI_WRK-DOC_CURRENCY.
  LS_PRC_ITEM-KURSK          = IS_DLI_WRK-EXCHANGE_RATE.
  LS_PRC_ITEM-KURSK_DAT      = IS_DLI_WRK-EXCHANGE_DATE.

  READ TABLE GT_ALL_ATTR_NAMES TRANSPORTING NO FIELDS
    WITH KEY TABLE_LINE = LC_BOR_HEAD
    BINARY SEARCH.
  IF SY-SUBRC EQ 0.
    LS_ATTR_NAME_VALUE-ATTR_NAME = LC_BOR_HEAD.
    LS_ATTR_NAME_VALUE-ATTR_VALUE = GC_BOR_DLI.
    PERFORM FILL_HEAD_NAME_VALUE_TAB USING LS_ATTR_NAME_VALUE
                                           GC_TRUE
                                     CHANGING LS_PRC_HEAD.
  ENDIF.
  READ TABLE GT_ALL_ATTR_NAMES TRANSPORTING NO FIELDS
    WITH KEY TABLE_LINE = LC_BOR_ITEM
    BINARY SEARCH.
  IF SY-SUBRC EQ 0.
    LS_ATTR_NAME_VALUE-ATTR_NAME = LC_BOR_ITEM.
    LS_ATTR_NAME_VALUE-ATTR_VALUE = GC_BOR_DLI.
    PERFORM FILL_ITEM_NAME_VALUE_TAB USING LS_ATTR_NAME_VALUE
                                           GC_TRUE
                                     CHANGING LS_PRC_ITEM.
  ENDIF.

  LS_PRC_HEAD-KAPPL            = LC_APPLICATION.
  LS_PRC_HEAD-KALSM            = IS_ITC-DLI_PRC_PROC.
  LS_PRC_ITEM-PRICING_RELEVANT = GC_TRUE.

* Event _PRCIMI2
  INCLUDE %2f1BEA%2fX_CRMB_PRCIMI2PRDO___IOP.
  INCLUDE %2f1BEA%2fX_CRMB_PRCIMI2PRCODL_TBC.
  INCLUDE %2f1BEA%2fX_CRMB_PRCIMI2PRCODL_CDT.

  IF NOT GV_MAPPING_EXIT IS INITIAL.
    CLEAR LT_RETURN.
    CALL BADI GV_MAPPING_EXIT->IN_MAP_HEAD
      EXPORTING  IS_DLI             = IS_DLI_WRK
                 IS_ITC             = IS_ITC
                 IT_HEAD_ATTR_NAMES = GT_HEAD_ATTR_NAMES
      IMPORTING  ET_RETURN          = LT_RETURN
      CHANGING   CS_PRC_HEAD        = LS_PRC_HEAD
      EXCEPTIONS REJECT       = 1.
    IF SY-SUBRC NE 0.
      APPEND LINES OF LT_RETURN TO ET_RETURN.
      MESSAGE E200(BEA_PRC) RAISING REJECT.
    ENDIF.

    CLEAR LT_RETURN.
    CALL BADI GV_MAPPING_EXIT->IN_MAP_ITEM
      EXPORTING  IS_DLI                  = IS_DLI_WRK
                 IS_ITC                  = IS_ITC
                 IT_HEAD_ATTR_NAMES      = GT_HEAD_ATTR_NAMES
                 IT_ITEM_ATTR_NAMES      = GT_ITEM_ATTR_NAMES
                 IT_TIMESTAMP_ATTR_NAMES = GT_TIMESTAMP_NAMES
      IMPORTING  ET_RETURN               = LT_RETURN
      CHANGING   CS_PRC_ITEM             = LS_PRC_ITEM
      EXCEPTIONS REJECT       = 1.
    IF SY-SUBRC NE 0.
      APPEND LINES OF LT_RETURN TO ET_RETURN.
      MESSAGE E201(BEA_PRC) RAISING REJECT.
    ENDIF.
  ENDIF.

  IF LS_PRC_ITEM-MGAME LT 0 OR
     IS_DLI_WRK-CREDIT_DEBIT = GC_CREDIT.
    LS_PRC_ITEM-MGAME = ABS( LS_PRC_ITEM-MGAME ).
    LS_PRC_ITEM-SHKZG = GC_PRC_SHKZG_NEG.
  ENDIF.

  IF LS_PRC_HEAD-PRSDT IS INITIAL.
    LS_PRC_HEAD-PRSDT = SY-DATLO.
  ENDIF.

  ES_PRC_HEAD  = LS_PRC_HEAD.
  ES_PRC_ITEM  = LS_PRC_ITEM.

ENDFUNCTION.

* Help Form Routines to fill the Name/Value Pair tables.
FORM FILL_HEAD_NAME_VALUE_TAB
  USING
    US_NAME_VALUE      TYPE PRCT_ATTR_NAME_VALUE
    UV_DELETE_EXISTING TYPE BEA_BOOLEAN
  CHANGING
    CS_PRC_HEAD        TYPE PRCT_HEAD_COM.

  CHECK US_NAME_VALUE-ATTR_NAME  IS NOT INITIAL AND
        US_NAME_VALUE-ATTR_VALUE IS NOT INITIAL.

  READ TABLE GT_HEAD_ATTR_NAMES
    TRANSPORTING NO FIELDS
    WITH KEY TABLE_LINE = US_NAME_VALUE-ATTR_NAME
    BINARY SEARCH.
  IF SY-SUBRC EQ 0.
    IF UV_DELETE_EXISTING EQ GC_TRUE.
      DELETE CS_PRC_HEAD-ATTR_NAME_VALUE
        WHERE ATTR_NAME EQ US_NAME_VALUE-ATTR_NAME.
    ENDIF.
    INSERT US_NAME_VALUE INTO TABLE CS_PRC_HEAD-ATTR_NAME_VALUE.
  ENDIF.
ENDFORM.

FORM FILL_ITEM_NAME_VALUE_TAB
  USING
    US_NAME_VALUE      TYPE PRCT_ATTR_NAME_VALUE
    UV_DELETE_EXISTING TYPE BEA_BOOLEAN
  CHANGING
    CS_PRC_ITEM        TYPE PRCT_ITEM_COM_VAR.

* An attribute is only in the header, item or timestamp table.
  CHECK US_NAME_VALUE-ATTR_NAME  IS NOT INITIAL AND
        US_NAME_VALUE-ATTR_VALUE IS NOT INITIAL.

  READ TABLE GT_HEAD_ATTR_NAMES
    TRANSPORTING NO FIELDS
    WITH KEY TABLE_LINE = US_NAME_VALUE-ATTR_NAME
    BINARY SEARCH.
  IF SY-SUBRC EQ 0.
    IF UV_DELETE_EXISTING EQ GC_TRUE.
      DELETE CS_PRC_ITEM-HEAD_ATTRIBUTES
        WHERE ATTR_NAME EQ US_NAME_VALUE-ATTR_NAME.
    ENDIF.
    INSERT US_NAME_VALUE INTO TABLE CS_PRC_ITEM-HEAD_ATTRIBUTES.
    EXIT.
  ENDIF.

  READ TABLE GT_ITEM_ATTR_NAMES
    TRANSPORTING NO FIELDS
    WITH KEY TABLE_LINE = US_NAME_VALUE-ATTR_NAME
    BINARY SEARCH.
  IF SY-SUBRC EQ 0.
    IF UV_DELETE_EXISTING EQ GC_TRUE.
      DELETE CS_PRC_ITEM-ITEM_ATTRIBUTES
        WHERE ATTR_NAME EQ US_NAME_VALUE-ATTR_NAME.
    ENDIF.
    INSERT US_NAME_VALUE INTO TABLE CS_PRC_ITEM-ITEM_ATTRIBUTES.
    EXIT.
  ENDIF.

  READ TABLE GT_TIMESTAMP_NAMES
    TRANSPORTING NO FIELDS
    WITH KEY TABLE_LINE = US_NAME_VALUE-ATTR_NAME
    BINARY SEARCH.
  IF SY-SUBRC EQ 0.
    IF UV_DELETE_EXISTING EQ GC_TRUE.
      DELETE CS_PRC_ITEM-TIMESTAMPS
        WHERE ATTR_NAME EQ US_NAME_VALUE-ATTR_NAME.
    ENDIF.
    INSERT US_NAME_VALUE INTO TABLE CS_PRC_ITEM-TIMESTAMPS.
    EXIT.
  ENDIF.
ENDFORM.
