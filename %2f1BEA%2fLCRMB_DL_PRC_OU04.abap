FUNCTION /1BEA/CRMB_DL_PRC_O_GET_INFO.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(IV_APPLICATION) TYPE  /SAPCND/APPLICATION
*"     REFERENCE(IV_USAGE) TYPE  /SAPCND/USAGE
*"     REFERENCE(IV_PRIC_PROC) TYPE  BEA_PRIC_PROC
*"  EXPORTING
*"     REFERENCE(ET_HEAD_ATTR_NAMES) TYPE  PRCT_ATTR_NAME_T
*"     REFERENCE(ET_ITEM_ATTR_NAMES) TYPE  PRCT_ATTR_NAME_T
*"     REFERENCE(ET_ALL_ATTR_NAMES) TYPE  PRCT_ATTR_NAME_T
*"     REFERENCE(ET_TIMESTAMP_NAMES) TYPE  PRCT_ATTR_NAME_T
*"     REFERENCE(ET_EXT_COND_TYPES) TYPE  PRCT_EXT_COND_TYPE_T
*"     REFERENCE(ET_HEAD_COND_TYPES) TYPE  PRCT_COND_TYPE_T
*"     REFERENCE(ET_ITEM_COND_TYPES) TYPE  PRCT_COND_TYPE_T
*"     REFERENCE(EV_TTE_REQUIRED) TYPE  PRCT_TTE_REQUIRED
*"     REFERENCE(EV_NULLCHAR) TYPE  CHAR1
*"  EXCEPTIONS
*"      WRONG_CALL
*"      IPC_ERROR
*"      SESSION_BEGIN
*"--------------------------------------------------------------------
*======================================================================
*
* The following coding has been generated. Please do not change
* manually. All modifications will be lost by new generation.
*
* The code generation was triggered by
*
* Name  : DDIC
* Date  : 03.05.2012
* Time  : 13:53:10
*
*======================================================================

   TYPES: BEGIN OF LTY_PRIC_PROC_INFO,
            APPLICATION     TYPE /SAPCND/APPLICATION,
            USAGE           TYPE /SAPCND/USAGE,
            PRIC_PROC       TYPE BEA_PRIC_PROC,
            HEAD_ATTR_NAMES TYPE PRCT_ATTR_NAME_T,
            ITEM_ATTR_NAMES TYPE PRCT_ATTR_NAME_T,
            ALL_ATTR_NAMES  TYPE PRCT_ATTR_NAME_T,
            TIMESTAMP_NAMES TYPE PRCT_ATTR_NAME_T,
            EXT_COND_TYPES  TYPE PRCT_EXT_COND_TYPE_T,
            HEAD_COND_TYPES TYPE PRCT_COND_TYPE_T,
            ITEM_COND_TYPES TYPE PRCT_COND_TYPE_T,
            TTE_REQUIRED    TYPE PRCT_TTE_REQUIRED,
            NULLCHAR(1)     TYPE C,
          END OF LTY_PRIC_PROC_INFO.

  STATICS: SS_PRIC_PROC_INFO TYPE LTY_PRIC_PROC_INFO.

  IF SS_PRIC_PROC_INFO-APPLICATION NE IV_APPLICATION OR
     SS_PRIC_PROC_INFO-USAGE       NE IV_USAGE OR
     SS_PRIC_PROC_INFO-PRIC_PROC   NE IV_PRIC_PROC.

    CLEAR SS_PRIC_PROC_INFO.

    CALL FUNCTION 'PRC_GET_PRICING_PROCEDURE_INFO'
      EXPORTING
        IV_APPLICATION           = IV_APPLICATION
        IV_USAGE                 = IV_USAGE
        IV_PROCEDURE_NAME        = IV_PRIC_PROC
      IMPORTING
        ET_EXT_COND_TYPES        = SS_PRIC_PROC_INFO-EXT_COND_TYPES
        ET_HEAD_COND_TYPES       = SS_PRIC_PROC_INFO-HEAD_COND_TYPES
        ET_ITEM_COND_TYPES       = SS_PRIC_PROC_INFO-ITEM_COND_TYPES
        ET_HEAD_ATTR_NAMES       = SS_PRIC_PROC_INFO-HEAD_ATTR_NAMES
        ET_ITEM_ATTR_NAMES       = SS_PRIC_PROC_INFO-ITEM_ATTR_NAMES
        ET_TIMESTAMP_NAMES       = SS_PRIC_PROC_INFO-TIMESTAMP_NAMES
        EV_TTE_REQUIRED          = SS_PRIC_PROC_INFO-TTE_REQUIRED
        EV_NULLCHAR              = SS_PRIC_PROC_INFO-NULLCHAR
      EXCEPTIONS
        WRONG_CALL               = 1
        IPC_ERROR                = 2
        SESSION_BEGIN            = 3
        OTHERS                   = 4.
    CASE SY-SUBRC.
      WHEN 0.
        SS_PRIC_PROC_INFO-APPLICATION = IV_APPLICATION.
        SS_PRIC_PROC_INFO-USAGE       = IV_USAGE.
        SS_PRIC_PROC_INFO-PRIC_PROC   = IV_PRIC_PROC.
        SS_PRIC_PROC_INFO-ALL_ATTR_NAMES = SS_PRIC_PROC_INFO-HEAD_ATTR_NAMES.
        INSERT LINES OF SS_PRIC_PROC_INFO-ITEM_ATTR_NAMES
               INTO TABLE SS_PRIC_PROC_INFO-ALL_ATTR_NAMES.
        INSERT LINES OF SS_PRIC_PROC_INFO-TIMESTAMP_NAMES
               INTO TABLE SS_PRIC_PROC_INFO-ALL_ATTR_NAMES.
        SORT SS_PRIC_PROC_INFO-ALL_ATTR_NAMES.
      WHEN 1.
        RAISE WRONG_CALL.
      WHEN 2.
        RAISE IPC_ERROR.
      WHEN 3.
        RAISE SESSION_BEGIN.
      WHEN OTHERS.
    ENDCASE.

* Update the global buffer tables
    SORT SS_PRIC_PROC_INFO-HEAD_ATTR_NAMES.
    SORT SS_PRIC_PROC_INFO-ITEM_ATTR_NAMES.
    SORT SS_PRIC_PROC_INFO-TIMESTAMP_NAMES.
    GT_HEAD_ATTR_NAMES = SS_PRIC_PROC_INFO-HEAD_ATTR_NAMES.
    GT_ITEM_ATTR_NAMES = SS_PRIC_PROC_INFO-ITEM_ATTR_NAMES.
    GT_ALL_ATTR_NAMES  = SS_PRIC_PROC_INFO-ALL_ATTR_NAMES.
    GT_TIMESTAMP_NAMES = SS_PRIC_PROC_INFO-TIMESTAMP_NAMES.
  ENDIF.

* Return the attributes only if requested.
  IF ET_HEAD_ATTR_NAMES IS REQUESTED.
    ET_HEAD_ATTR_NAMES = SS_PRIC_PROC_INFO-HEAD_ATTR_NAMES.
  ENDIF.
  IF ET_ITEM_ATTR_NAMES IS REQUESTED.
    ET_ITEM_ATTR_NAMES = SS_PRIC_PROC_INFO-ITEM_ATTR_NAMES.
  ENDIF.
  IF ET_ALL_ATTR_NAMES IS REQUESTED.
    ET_ALL_ATTR_NAMES  = SS_PRIC_PROC_INFO-ALL_ATTR_NAMES.
  ENDIF.
  IF ET_TIMESTAMP_NAMES IS REQUESTED.
    ET_TIMESTAMP_NAMES = SS_PRIC_PROC_INFO-TIMESTAMP_NAMES.
  ENDIF.
  IF ET_EXT_COND_TYPES IS REQUESTED.
    ET_EXT_COND_TYPES  = SS_PRIC_PROC_INFO-EXT_COND_TYPES.
  ENDIF.
  IF ET_HEAD_COND_TYPES IS REQUESTED.
    ET_HEAD_COND_TYPES = SS_PRIC_PROC_INFO-HEAD_COND_TYPES.
  ENDIF.
  IF ET_ITEM_COND_TYPES IS REQUESTED.
    ET_ITEM_COND_TYPES = SS_PRIC_PROC_INFO-ITEM_COND_TYPES.
  ENDIF.
  IF EV_TTE_REQUIRED IS REQUESTED.
    EV_TTE_REQUIRED    = SS_PRIC_PROC_INFO-TTE_REQUIRED.
  ENDIF.
  IF EV_NULLCHAR IS REQUESTED.
    EV_NULLCHAR        = SS_PRIC_PROC_INFO-NULLCHAR.
  ENDIF.
ENDFUNCTION.
