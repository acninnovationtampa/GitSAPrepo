FUNCTION /1BEA/CRMB_BD_PPF_O_PROCS_DET.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(IS_BDH) TYPE  /1BEA/S_CRMB_BDH_WRK
*"     REFERENCE(IS_BTY) TYPE  BEAS_BTY_WRK
*"  EXPORTING
*"     REFERENCE(ET_PPF_PROCS) TYPE  BEAT_PPF_PROCS
*"     REFERENCE(ET_RETURN) TYPE  BEAT_RETURN
*"--------------------------------------------------------------------
*======================================================================
*
* The following coding has been generated. Please do not change
* manually. All modifications will be lost by new generation.
*
* The code generation was triggered by
*
* Name  : DDIC
* Date  : 03.05.2012
* Time  : 13:53:02
*
*======================================================================
   CONSTANTS:
     LC_APPLICATION TYPE /SAPCND/APPLICATION VALUE 'ACB',
     LC_USAGE       TYPE /SAPCND/USAGE       VALUE 'AP',
     LC_AP_PROFILE  TYPE /SAPCND/DET_VALUE   VALUE 'AP_ACT_PROFILE'.

   DATA:
    LV_VALID              TYPE /SAPCND/TIMESTAMP,
    LR_ANALYSIS           TYPE REF TO /SAPCND/CL_DET_ANALYSIS_OW,
    LS_PPF_PROCS          TYPE BEAS_PPF_PROCS,
    LV_PARTNER            TYPE BU_PARTNER,
    LV_PARTNER_GUID       TYPE BU_PARTNER_GUID,
    LT_USAGE_DATA         TYPE /SAPCND/DET_ATTRIB_VALUE_T,
    LS_USAGE_DATA         TYPE /SAPCND/DET_ATTRIB_VALUE,
    LS_RESULT             TYPE /SAPCND/DET_RESULT_RECORD,
    LT_RESULT             TYPE /SAPCND/T_DET_RESULT_RECORD,

    LT_HEAD_ATTR_NAMES    TYPE /SAPCND/T_FIELDNAME,
    LT_ITEM_ATTR_NAMES    TYPE /SAPCND/T_FIELDNAME,
    LS_ATTR_NAMES         TYPE /SAPCND/FIELDNAME,
    LS_RESULT_CONTROL     TYPE /SAPCND/DET_RESULT_CONTROL,

    LS_ATTRIBUTES         TYPE /SAPCND/DET_ATTRIB_VALUE,
    LT_HEADER_ATTRIBUTES  TYPE /SAPCND/DET_ATTRIB_VALUE_T,
    LT_ITEM_ATTRIBUTES    TYPE /SAPCND/DET_ATTRIB_VALUE_T.

    FIELD-SYMBOLS: <LS_VALUE> TYPE ANY,
                   <LS_RESULT> TYPE ANY.

* only do something if a determination procedure was
* assigned to the bill type.
  CHECK IS_BTY-AP_DET_PROC IS NOT INITIAL.

  CALL FUNCTION 'IPC_CT_GET_RELEVANT_ATTRIBUTES'
    EXPORTING
      IV_APPLICATION         = LC_APPLICATION
      IV_USAGE               = LC_USAGE
      IV_CTLIST              = IS_BTY-AP_DET_PROC
    IMPORTING
      ET_HEAD_ATTR_NAMES     = LT_HEAD_ATTR_NAMES
      ET_ITEM_ATTR_NAMES     = LT_ITEM_ATTR_NAMES
    EXCEPTIONS
      INVALID_ENGINE_TYPE    = 1
      ENGINE_ERROR           = 2
      ENGINE_INITIALIZATION  = 3
      NO_RELEVANT_ATTRIBUTES = 4
      OTHERS                 = 5.
  IF SY-SUBRC <> 0.
*     fill et_return
   MESSAGE ID     SY-MSGID
           TYPE   SY-MSGTY
           NUMBER SY-MSGNO
           WITH   SY-MSGV1 SY-MSGV2
                  SY-MSGV3 SY-MSGV4
           INTO   GV_DUMMY.
    PERFORM MSG_ADD USING SPACE SPACE SPACE SPACE CHANGING ET_RETURN.
    EXIT.
  ENDIF.

  ASSIGN IS_BDH TO <LS_RESULT>.
  LOOP AT LT_HEAD_ATTR_NAMES INTO LS_ATTR_NAMES.
* exception's becasue fieldnames or semantic of fields is different
    CASE LS_ATTR_NAMES.
    WHEN 'BEF_APPL'.
      LS_ATTRIBUTES-VALUE = IS_BTY-APPLICATION.
      LS_ATTRIBUTES-FIELDNAME = 'BEF_APPL'.
      INSERT LS_ATTRIBUTES INTO TABLE LT_HEADER_ATTRIBUTES.
      CLEAR LS_ATTRIBUTES.
      CONTINUE.
    WHEN 'PAYER'.
      LV_PARTNER = IS_BDH-PAYER.
      CALL FUNCTION 'COM_PARTNER_CONVERT_GUID_TO_NO'
        EXPORTING
          IV_PARTNER      = LV_PARTNER
        IMPORTING
          EV_PARTNER_GUID = LV_PARTNER_GUID.
      LS_ATTRIBUTES-VALUE = LV_PARTNER_GUID.
      LS_ATTRIBUTES-FIELDNAME = 'PAYER'.
      INSERT LS_ATTRIBUTES INTO TABLE LT_HEADER_ATTRIBUTES.
      CLEAR LS_ATTRIBUTES.
      CONTINUE.
    ENDCASE.

    ASSIGN COMPONENT LS_ATTR_NAMES OF STRUCTURE <LS_RESULT>
      TO <LS_VALUE>.
    IF SY-SUBRC <> 0.
      CONTINUE.
    ENDIF.
    LS_ATTRIBUTES-VALUE = <LS_VALUE>.
    LS_ATTRIBUTES-FIELDNAME = LS_ATTR_NAMES.
    INSERT LS_ATTRIBUTES INTO TABLE LT_HEADER_ATTRIBUTES.
    CLEAR LS_ATTRIBUTES.
  ENDLOOP.


  LOOP AT LT_ITEM_ATTR_NAMES INTO LS_ATTR_NAMES.
    CASE LS_ATTR_NAMES.
    WHEN 'BEF_APPL'.
      LS_ATTRIBUTES-VALUE = IS_BTY-APPLICATION.
      LS_ATTRIBUTES-FIELDNAME = 'BEF_APPL'.
      INSERT LS_ATTRIBUTES INTO TABLE LT_ITEM_ATTRIBUTES.
      CLEAR LS_ATTRIBUTES.
      CONTINUE.
    WHEN 'PAYER'.
       LV_PARTNER = IS_BDH-PAYER.
       CALL FUNCTION 'COM_PARTNER_CONVERT_GUID_TO_NO'
         EXPORTING
           IV_PARTNER      = LV_PARTNER
         IMPORTING
           EV_PARTNER_GUID = LV_PARTNER_GUID.
      LS_ATTRIBUTES-VALUE = LV_PARTNER_GUID.
      LS_ATTRIBUTES-FIELDNAME = 'PAYER'.
      INSERT LS_ATTRIBUTES INTO TABLE LT_ITEM_ATTRIBUTES.
      CLEAR LS_ATTRIBUTES.
      CONTINUE.
    ENDCASE.

    ASSIGN COMPONENT LS_ATTR_NAMES OF STRUCTURE <LS_RESULT>
      TO <LS_VALUE>.
    IF SY-SUBRC <> 0.
      CONTINUE.
    ENDIF.
    LS_ATTRIBUTES-VALUE = <LS_VALUE>.
    LS_ATTRIBUTES-FIELDNAME = LS_ATTR_NAMES.
    APPEND LS_ATTRIBUTES TO LT_ITEM_ATTRIBUTES.
    CLEAR LS_ATTRIBUTES.
  ENDLOOP.

* Additional Mapping Logic if required

   CONCATENATE IS_BDH-BILL_DATE '000000' INTO LV_VALID.

  LS_RESULT_CONTROL-USAGE_DATA = GC_TRUE.

  CALL FUNCTION 'IPC_CT_CNF_DETERMINE'
    EXPORTING
      IV_APPLICATION              = LC_APPLICATION
      IV_USAGE                    = LC_USAGE
      IV_CTLIST                   = IS_BTY-AP_DET_PROC
      IV_DEFAULT_ACCESS_TIMESTAMP = LV_VALID
      IT_HEADER_ATTRIBUTES        = LT_HEADER_ATTRIBUTES
      IT_ITEM_ATTRIBUTES          = LT_ITEM_ATTRIBUTES
      IS_RESULT_CONTROL           = LS_RESULT_CONTROL
    IMPORTING
      ET_RESULT                   = LT_RESULT
    CHANGING
      CR_ANALYSIS                 = LR_ANALYSIS
    EXCEPTIONS
      INVALID_CALL                = 1
      INVALID_ENGINE_TYPE         = 2
      ENGINE_ERROR                = 3
      ENGINE_INITIALIZATION       = 4
      OTHERS                      = 5.
  IF SY-SUBRC <> 0.
*     fill et_return
    MESSAGE ID     SY-MSGID
            TYPE   SY-MSGTY
            NUMBER SY-MSGNO
            WITH   SY-MSGV1 SY-MSGV2
                   SY-MSGV3 SY-MSGV4
            INTO   GV_DUMMY.
    PERFORM MSG_ADD USING SPACE SPACE SPACE SPACE CHANGING ET_RETURN.
  ENDIF.

  READ TABLE LT_RESULT INTO LS_RESULT INDEX 1.
  IF SY-SUBRC = 0.
    LT_USAGE_DATA = LS_RESULT-USAGE_DATA.
    LOOP AT LT_USAGE_DATA INTO LS_USAGE_DATA.
      IF LS_USAGE_DATA-FIELDNAME = LC_AP_PROFILE.
        LS_PPF_PROCS-PPF_PROC = LS_USAGE_DATA-VALUE.
        APPEND LS_PPF_PROCS TO ET_PPF_PROCS.
      ENDIF.
    ENDLOOP.
  ENDIF.

ENDFUNCTION.
