FUNCTION /1BEA/CRMB_BD_O_CIT_CREATE.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(IS_DLI) TYPE  /1BEA/S_CRMB_DLI_WRK
*"     REFERENCE(IS_BDI) TYPE  /1BEA/S_CRMB_BDI_WRK
*"     REFERENCE(IS_ITC) TYPE  BEAS_ITC_WRK
*"     REFERENCE(IV_OPT_BD_READ) TYPE  BEA_BOOLEAN OPTIONAL
*"  EXPORTING
*"     REFERENCE(ET_BDI) TYPE  /1BEA/T_CRMB_BDI_WRK
*"     REFERENCE(ET_BDI_TC) TYPE  /1BEA/T_CRMB_BDI_WRK
*"  EXCEPTIONS
*"      REJECT
*"--------------------------------------------------------------------
*======================================================================
*
* The following coding has been generated. Please do not change
* manually. All modifications will be lost by new generation.
*
* The code generation was triggered by
*
* Name  : DDIC
* Date  : 03.05.2012
* Time  : 13:52:50
*
*======================================================================
 DATA:
   LT_RETURN      TYPE BEAT_RETURN,
   LS_RETURN      TYPE BEAS_RETURN,
   LT_DLI_WRK     TYPE /1BEA/T_CRMB_DLI_WRK,
   LS_DLI_WRK     TYPE /1BEA/S_CRMB_DLI_WRK,
   LS_BDI_WRK     TYPE /1BEA/S_CRMB_BDI_WRK,
   LT_BDI_LTC_WRK TYPE /1BEA/T_CRMB_BDI_WRK,
   LS_BDI_LTC_WRK  TYPE /1BEA/S_CRMB_BDI_WRK,
   LS_BDH_WRK     TYPE /1BEA/S_CRMB_BDH_WRK,
   LS_CIT_WRK     TYPE /1BEA/S_CRMB_BDI_WRK,
   LS_CIT_LF_WRK  TYPE /1BEA/S_CRMB_BDI_WRK,
   LV_RETURNCODE  TYPE SYSUBRC.

 BREAK-POINT ID BEA_DIFFINV.

 CHECK IS_DLI-BILL_STATUS EQ GC_BILLSTAT_TODO.

 CALL FUNCTION '/1BEA/CRMB_DL_O_GETCORRITEM'
   EXPORTING
     IS_DLI      = IS_DLI
   IMPORTING
     ET_DLI      = LT_DLI_WRK
     ET_RETURN   = LT_RETURN.
 IF NOT LT_RETURN IS INITIAL.
   LOOP AT LT_RETURN INTO LS_RETURN.
    MESSAGE ID LS_RETURN-ID TYPE LS_RETURN-TYPE
            NUMBER LS_RETURN-NUMBER
            WITH LS_RETURN-MESSAGE_V1 LS_RETURN-MESSAGE_V2
                 LS_RETURN-MESSAGE_V3 LS_RETURN-MESSAGE_V4
            INTO GV_DUMMY.
    CALL FUNCTION '/1BEA/CRMB_BD_O_MESSAGE_ADD'
      EXPORTING
        IV_OBJECT      = 'DL'
        IV_CONTAINER   = 'DLI'
        IS_DLI_WRK     = IS_DLI.
   ENDLOOP.
   MESSAGE E280(BEA) RAISING REJECT.
 ENDIF.
 CHECK NOT LT_DLI_WRK IS INITIAL.

 LOOP AT LT_DLI_WRK INTO LS_DLI_WRK.
   CLEAR LT_BDI_LTC_WRK.
   CLEAR LS_BDI_WRK.
   CLEAR LS_BDH_WRK.
   IF LS_DLI_WRK-BDI_GUID IS INITIAL.
     MESSAGE E282(BEA) WITH GC_P_DLI_ITEMNO GC_P_DLI_HEADNO
        INTO GV_DUMMY.
     CALL FUNCTION '/1BEA/CRMB_BD_O_MESSAGE_ADD'
       EXPORTING
         IV_OBJECT      = 'DL'
         IV_CONTAINER   = 'DLI'
         IS_DLI_WRK     = LS_DLI_WRK.
     MESSAGE E280(BEA) RAISING REJECT.
   ELSE.
     PERFORM GET_BDI_TC
       USING
         LS_DLI_WRK
         IV_OPT_BD_READ
       CHANGING
         LS_BDI_WRK
         LS_BDH_WRK
         LV_RETURNCODE.
     IF NOT LV_RETURNCODE IS INITIAL.
       MESSAGE E280(BEA) RAISING REJECT.
     ENDIF.
     PERFORM CORR_BDI_FILL
       USING
         LS_BDI_WRK
         LS_BDH_WRK
         IS_BDI
         IS_ITC
       CHANGING
         LS_CIT_WRK
         LV_RETURNCODE.
     IF NOT LV_RETURNCODE IS INITIAL.
       MESSAGE E281(BEA) RAISING REJECT.
     ENDIF.
     APPEND LS_CIT_WRK TO ET_BDI.
     APPEND LS_BDI_WRK TO ET_BDI_TC.
*    consider also leaf items to be corrected
     IF LS_BDI_WRK-ITEM_TYPE = gc_item_type_struct.
       PERFORM GET_LEAF_BDI
         USING
           LS_BDI_WRK
         CHANGING
           LT_BDI_LTC_WRK
           LV_RETURNCODE.
       IF NOT LV_RETURNCODE IS INITIAL.
         MESSAGE E281(BEA) RAISING REJECT.
       ENDIF.
       LOOP AT LT_BDI_LTC_WRK INTO LS_BDI_LTC_WRK.
         PERFORM CORR_BDI_FILL
           USING
             LS_BDI_LTC_WRK
             LS_BDH_WRK
             LS_BDI_WRK     "provides parent itemno
             IS_ITC
           CHANGING
             LS_CIT_LF_WRK
             LV_RETURNCODE.
         IF NOT LV_RETURNCODE IS INITIAL.
           MESSAGE E281(BEA) RAISING REJECT.
         ENDIF.
         INSERT LS_CIT_LF_WRK INTO TABLE ET_BDI.
         INSERT LS_BDI_LTC_WRK INTO TABLE ET_BDI_TC.
       ENDLOOP.
     ENDIF.
   ENDIF.
 ENDLOOP.

ENDFUNCTION.

*-----------------------------------------------------------------*
*       FORM GET_BDI_TC                                           *
*-----------------------------------------------------------------*
FORM GET_BDI_TC
  USING
    US_DLI_WRK    TYPE /1BEA/S_CRMB_DLI_WRK
    UV_OPT_READ   TYPE BEA_BOOLEAN
  CHANGING
    CS_BDI_WRK    TYPE /1BEA/S_CRMB_BDI_WRK
    CS_BDH_WRK    TYPE /1BEA/S_CRMB_BDH_WRK
    CV_RETURNCODE TYPE SYSUBRC.
  DATA:
    LT_BDI_WRK    TYPE /1BEA/T_CRMB_BDI_WRK,
    LT_BDH_WRK    TYPE /1BEA/T_CRMB_BDH_WRK,
    LS_BDI_WRK    TYPE /1BEA/S_CRMB_BDI_WRK,
    LS_BDH_WRK    TYPE /1BEA/S_CRMB_BDH_WRK,
    LRS_BDI_GUID  TYPE BEARS_BDI_GUID,
    LRT_BDI_GUID  TYPE BEART_BDI_GUID,
    LS_RETURN     TYPE BEAS_RETURN.
  STATICS:
    SS_BDH_WRK    TYPE /1BEA/S_CRMB_BDH_WRK,
    ST_BDI_WRK    TYPE /1BEA/T_CRMB_BDI_WRK.

 READ TABLE GT_BDI_WRK INTO LS_BDI_WRK
    WITH KEY BDI_GUID = US_DLI_WRK-BDI_GUID.
 IF SY-SUBRC NE 0.
   READ TABLE ST_BDI_WRK INTO LS_BDI_WRK
     WITH KEY BDI_GUID = US_DLI_WRK-BDI_GUID.
   IF SY-SUBRC NE 0.
     CLEAR LRS_BDI_GUID.
     CLEAR LRT_BDI_GUID.
     LRS_BDI_GUID-SIGN   = GC_INCLUDE.
     LRS_BDI_GUID-OPTION = GC_RANGEOPTION_EQ.
     LRS_BDI_GUID-LOW    = US_DLI_WRK-BDI_GUID.
     APPEND LRS_BDI_GUID TO LRT_BDI_GUID.
     CALL FUNCTION '/1BEA/CRMB_BD_O_BDIGETLIST'
       EXPORTING
         IRT_BDI_GUID = LRT_BDI_GUID
       IMPORTING
         ET_BDI       = LT_BDI_WRK.
     READ TABLE LT_BDI_WRK INTO LS_BDI_WRK INDEX 1.
     IF SY-SUBRC NE 0.
       MESSAGE E283(BEA) WITH GC_P_DLI_ITEMNO GC_P_DLI_HEADNO
          INTO GV_DUMMY.
       CALL FUNCTION '/1BEA/CRMB_BD_O_MESSAGE_ADD'
         EXPORTING
           IV_OBJECT      = 'DL'
           IV_CONTAINER   = 'DLI'
           IS_DLI_WRK     = US_DLI_WRK.
       CV_RETURNCODE = 1.
       RETURN.
     ENDIF.
     CLEAR LT_BDI_WRK.
   ENDIF.
 ENDIF.

 IF LS_BDI_WRK-BDH_GUID NE SS_BDH_WRK-BDH_GUID.
   READ TABLE GT_BDH_WRK INTO LS_BDH_WRK
     WITH KEY BDH_GUID = LS_BDI_WRK-BDH_GUID.
   IF SY-SUBRC NE 0.
     CALL FUNCTION '/1BEA/CRMB_BD_O_ENQUEUE'
       EXPORTING
        IV_BDH_GUID  = LS_BDI_WRK-BDH_GUID
       IMPORTING
        ES_RETURN    = LS_RETURN.
     IF NOT LS_RETURN IS INITIAL.
       MESSAGE E284(BEA) WITH LS_BDH_WRK-HEADNO_EXT
          INTO GV_DUMMY.
       CALL FUNCTION '/1BEA/CRMB_BD_O_MESSAGE_ADD'
         EXPORTING
           IV_OBJECT      = 'DL'
           IV_CONTAINER   = 'DLI'
           IS_DLI_WRK     = US_DLI_WRK.
       CV_RETURNCODE = 1.
       RETURN.
     ENDIF.
     CLEAR LRS_BDI_GUID.
     CLEAR LRT_BDI_GUID.
     LRS_BDI_GUID-SIGN   = GC_INCLUDE.
     LRS_BDI_GUID-OPTION = GC_RANGEOPTION_EQ.
     LRS_BDI_GUID-LOW    = US_DLI_WRK-BDI_GUID.
     APPEND LRS_BDI_GUID TO LRT_BDI_GUID.
     CALL FUNCTION '/1BEA/CRMB_BD_O_GETLIST'
       EXPORTING
         IV_COMPLIT       = GC_FALSE
         IRT_BDI_BDI_GUID = LRT_BDI_GUID
       IMPORTING
         ET_BDH           = LT_BDH_WRK
         ET_BDI           = ST_BDI_WRK.
     READ TABLE ST_BDI_WRK INTO LS_BDI_WRK INDEX 1.
     IF SY-SUBRC NE 0.
       MESSAGE E283(BEA) WITH GC_P_DLI_ITEMNO GC_P_DLI_HEADNO
          INTO GV_DUMMY.
       CALL FUNCTION '/1BEA/CRMB_BD_O_MESSAGE_ADD'
         EXPORTING
           IV_OBJECT      = 'DL'
           IV_CONTAINER   = 'DLI'
           IS_DLI_WRK     = US_DLI_WRK.
       CV_RETURNCODE = 1.
       RETURN.
     ENDIF.
     READ TABLE LT_BDH_WRK INTO LS_BDH_WRK INDEX 1.
     IF SY-SUBRC NE 0.
       MESSAGE E285(BEA) WITH GC_P_DLI_ITEMNO GC_P_DLI_HEADNO
          INTO GV_DUMMY.
       CALL FUNCTION '/1BEA/CRMB_BD_O_MESSAGE_ADD'
         EXPORTING
           IV_OBJECT      = 'DL'
           IV_CONTAINER   = 'DLI'
           IS_DLI_WRK     = US_DLI_WRK.
       CV_RETURNCODE = 1.
       RETURN.
     ENDIF.
     SS_BDH_WRK = LS_BDH_WRK.
   ENDIF.
 ELSE.
   LS_BDH_WRK = SS_BDH_WRK.
 ENDIF.
 CS_BDI_WRK = LS_BDI_WRK.
 CS_BDH_WRK = LS_BDH_WRK.

ENDFORM.
*-----------------------------------------------------------------*
*       FORM CORR_BDI_FILL                                        *
*-----------------------------------------------------------------*
FORM CORR_BDI_FILL
  USING
    US_BDI_TC_WRK TYPE /1BEA/S_CRMB_BDI_WRK
    US_BDH_TC_WRK TYPE /1BEA/S_CRMB_BDH_WRK
    US_BDI_CI_WRK TYPE /1BEA/S_CRMB_BDI_WRK
    US_ITC        TYPE BEAS_ITC_WRK
  CHANGING
    CS_BDI_WRK    TYPE /1BEA/S_CRMB_BDI_WRK
    CV_RETURNCODE TYPE SYSUBRC.

  CS_BDI_WRK = US_BDI_TC_WRK.

  CALL FUNCTION 'GUID_CREATE'
    IMPORTING
      EV_GUID_16 = CS_BDI_WRK-BDI_GUID.
  CLEAR CS_BDI_WRK-ITEMNO_EXT.

  CLEAR CS_BDI_WRK-SRVDOC_SOURCE.
  CLEAR CS_BDI_WRK-BDI_PRICING_TYPE.
  CLEAR CS_BDI_WRK-BDI_PRCCOPY_TYPE.
  CLEAR CS_BDI_WRK-ROOT_DLITEM_GUID.
  CLEAR CS_BDI_WRK-UPD_TYPE.
  CLEAR CS_BDI_WRK-BDH_GUID.
  CLEAR CS_BDI_WRK-IS_REVERSED.

  CS_BDI_WRK-REVERSAL = GC_REVERSAL_CORREC.

* Event BD_OCIT1
  INCLUDE %2f1BEA%2fX_CRMBBD_OCIT1PAROBD_CI3.
  INCLUDE %2f1BEA%2fX_CRMBBD_OCIT1PRCOBD_CIC.
  INCLUDE %2f1BEA%2fX_CRMBBD_OCIT1DI0OBD_CIP.
  INCLUDE %2f1BEA%2fX_CRMBBD_OCIT1COBOBD_DFL.

ENDFORM.
*-----------------------------------------------------------------*
*       FORM GET_LEAF_BDI                                         *
*-----------------------------------------------------------------*
FORM GET_LEAF_BDI
  USING
    US_BDI_WRK    TYPE /1BEA/S_CRMB_BDI_WRK
  CHANGING
    CT_BDI_WRK    TYPE /1BEA/T_CRMB_BDI_WRK
    CV_RETURNCODE TYPE SYSUBRC.

  DATA:
    LRS_PARENT_ITEMNO TYPE /1BEA/RS_CRMB_PARENT_ITEMNO,
    LRT_PARENT_ITEMNO TYPE /1BEA/RT_CRMB_PARENT_ITEMNO,
    LRS_BDH_GUID      TYPE BEARS_BDH_GUID,
    LRT_BDH_GUID      TYPE BEART_BDH_GUID,
    LRS_ITEM_TYPE     TYPE BEARS_ITEM_TYPE,
    LRT_ITEM_TYPE     TYPE BEART_ITEM_TYPE,
    LRS_SRC_GUID      TYPE /1BEA/RS_CRMB_SRC_GUID,
    LRT_SRC_GUID      TYPE /1BEA/RT_CRMB_SRC_GUID,
    LS_RETURN         TYPE BEAS_RETURN.

  LRS_PARENT_ITEMNO-SIGN   = GC_INCLUDE.
  LRS_PARENT_ITEMNO-OPTION = GC_RANGEOPTION_EQ.
  LRS_PARENT_ITEMNO-LOW    = US_BDI_WRK-ITEMNO_EXT.
  APPEND LRS_PARENT_ITEMNO TO LRT_PARENT_ITEMNO.
  LRS_BDH_GUID-SIGN   = GC_INCLUDE.
  LRS_BDH_GUID-OPTION = GC_RANGEOPTION_EQ.
  LRS_BDH_GUID-LOW    = US_BDI_WRK-BDH_GUID.
  APPEND LRS_BDH_GUID TO LRT_BDH_GUID.
  LRS_ITEM_TYPE-SIGN   = GC_INCLUDE.
  LRS_ITEM_TYPE-OPTION = GC_RANGEOPTION_EQ.
  LRS_ITEM_TYPE-LOW    = gc_item_type_accrual.
  APPEND LRS_ITEM_TYPE TO LRT_ITEM_TYPE.
  LRS_SRC_GUID-SIGN   = GC_INCLUDE.
  LRS_SRC_GUID-OPTION = GC_RANGEOPTION_EQ.
  LRS_SRC_GUID-LOW    = US_BDI_WRK-SRC_GUID.
  APPEND LRS_SRC_GUID TO LRT_SRC_GUID.
  CALL FUNCTION '/1BEA/CRMB_BD_O_BDIGETLIST'
    EXPORTING
      IRT_PARENT_ITEMNO = LRT_PARENT_ITEMNO
      IRT_BDH_GUID      = LRT_BDH_GUID
      IRT_ITEM_TYPE     = LRT_ITEM_TYPE
      IRT_SRC_GUID      = LRT_SRC_GUID
    IMPORTING
      ET_BDI            = CT_BDI_WRK.

   IF CT_BDI_WRK IS INITIAL.
     MESSAGE E283(BEA) WITH GC_P_DLI_ITEMNO GC_P_DLI_HEADNO INTO GV_DUMMY.
     CALL FUNCTION '/1BEA/CRMB_BD_O_MESSAGE_ADD'
       EXPORTING
         IV_OBJECT      = 'BD'
         IV_CONTAINER   = 'BDI'
         IS_BDI         = US_BDI_WRK.
     CV_RETURNCODE = 1.
   ENDIF.

ENDFORM.

